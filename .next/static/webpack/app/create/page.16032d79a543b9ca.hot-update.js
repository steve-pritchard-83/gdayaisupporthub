"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/create/page",{

/***/ "(app-pages-browser)/./utils/localStorage.ts":
/*!*******************************!*\
  !*** ./utils/localStorage.ts ***!
  \*******************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   deleteTicket: function() { return /* binding */ deleteTicket; },\n/* harmony export */   generateId: function() { return /* binding */ generateId; },\n/* harmony export */   getDefaultKnowledgeArticles: function() { return /* binding */ getDefaultKnowledgeArticles; },\n/* harmony export */   getDefaultTickets: function() { return /* binding */ getDefaultTickets; },\n/* harmony export */   getKnowledgeArticles: function() { return /* binding */ getKnowledgeArticles; },\n/* harmony export */   getTicketById: function() { return /* binding */ getTicketById; },\n/* harmony export */   getTicketStats: function() { return /* binding */ getTicketStats; },\n/* harmony export */   getTickets: function() { return /* binding */ getTickets; },\n/* harmony export */   initializeDefaultData: function() { return /* binding */ initializeDefaultData; },\n/* harmony export */   saveTicket: function() { return /* binding */ saveTicket; }\n/* harmony export */ });\n// Storage keys\nconst TICKETS_KEY = \"gday-support-tickets\";\nconst KNOWLEDGE_KEY = \"gday-support-knowledge\";\n// ðŸ”§ BASIC ERROR HANDLING - localStorage operations can fail\nconst safeLocalStorage = {\n    getItem: (key)=>{\n        try {\n            return localStorage.getItem(key);\n        } catch (error) {\n            console.error(\"Failed to get item from localStorage:\", error);\n            return null;\n        }\n    },\n    setItem: (key, value)=>{\n        try {\n            localStorage.setItem(key, value);\n            return true;\n        } catch (error) {\n            console.error(\"Failed to set item in localStorage:\", error);\n            return false;\n        }\n    }\n};\n// Generate unique ID for new tickets\nconst generateId = ()=>{\n    return Date.now().toString(36) + Math.random().toString(36).substr(2);\n};\n// TICKET OPERATIONS\nconst getTickets = ()=>{\n    const data = safeLocalStorage.getItem(TICKETS_KEY);\n    if (!data) return [];\n    try {\n        const tickets = JSON.parse(data);\n        // Data migration: Update 'Bug Report' to 'Bug Ticket'\n        const migratedTickets = tickets.map((ticket)=>{\n            if (ticket.category === \"Bug Report\") {\n                return {\n                    ...ticket,\n                    category: \"Bug Ticket\"\n                };\n            }\n            return ticket;\n        });\n        return migratedTickets;\n    } catch (error) {\n        console.error(\"Failed to parse tickets data:\", error);\n        return [];\n    }\n};\nconst saveTicket = (ticket)=>{\n    const tickets = getTickets();\n    const existingIndex = tickets.findIndex((t)=>t.id === ticket.id);\n    if (existingIndex >= 0) {\n        // Update existing ticket\n        tickets[existingIndex] = {\n            ...ticket,\n            updatedDate: new Date().toISOString()\n        };\n    } else {\n        // Add new ticket\n        tickets.push(ticket);\n    }\n    return safeLocalStorage.setItem(TICKETS_KEY, JSON.stringify(tickets));\n};\nconst deleteTicket = (id)=>{\n    const tickets = getTickets();\n    const filteredTickets = tickets.filter((t)=>t.id !== id);\n    return safeLocalStorage.setItem(TICKETS_KEY, JSON.stringify(filteredTickets));\n};\nconst getTicketById = (id)=>{\n    const tickets = getTickets();\n    return tickets.find((t)=>t.id === id) || null;\n};\n// KNOWLEDGE BASE OPERATIONS\nconst getKnowledgeArticles = ()=>{\n    const data = safeLocalStorage.getItem(KNOWLEDGE_KEY);\n    if (!data) return getDefaultKnowledgeArticles();\n    try {\n        return JSON.parse(data);\n    } catch (error) {\n        console.error(\"Failed to parse knowledge articles data:\", error);\n        return getDefaultKnowledgeArticles();\n    }\n};\n// Hardcoded FAQ articles as requested\nconst getDefaultKnowledgeArticles = ()=>{\n    return [\n        {\n            id: \"faq-1\",\n            title: \"How do I submit a bug ticket effectively?\",\n            content: 'To submit a bug ticket effectively: 1) Choose \"Bug Ticket\" category, 2) Include steps to reproduce the issue, 3) Describe expected vs actual behavior, 4) Mention which AI tool is affected, 5) Include screenshots if possible. The more details you provide, the faster we can resolve the issue.',\n            category: \"Bug Ticket\",\n            tags: [\n                \"bug-ticket\",\n                \"troubleshooting\",\n                \"ticketing\"\n            ],\n            createdDate: \"2024-01-01T00:00:00Z\"\n        },\n        {\n            id: \"faq-2\",\n            title: \"What makes a good feature request?\",\n            content: 'A good feature request includes: 1) Clear problem statement, 2) Specific use case or user story, 3) Expected benefits, 4) Suggested implementation (if you have ideas), 5) Priority level and business justification. Focus on the \"why\" not just the \"what\".',\n            category: \"Feature Request\",\n            tags: [\n                \"feature-request\",\n                \"guidelines\",\n                \"best-practices\"\n            ],\n            createdDate: \"2024-01-01T00:00:00Z\"\n        },\n        {\n            id: \"faq-3\",\n            title: \"Common AI tool troubleshooting steps\",\n            content: \"Before submitting a bug ticket, try these steps: 1) Refresh your browser/restart the application, 2) Check internet connection, 3) Clear browser cache and cookies, 4) Try a different browser, 5) Check if the issue happens with different AI tools. If problems persist, submit a bug ticket with these steps documented.\",\n            category: \"Bug Ticket\",\n            tags: [\n                \"troubleshooting\",\n                \"technical\",\n                \"self-help\"\n            ],\n            createdDate: \"2024-01-01T00:00:00Z\"\n        },\n        {\n            id: \"faq-4\",\n            title: \"How long does bug resolution take?\",\n            content: \"Bug resolution timelines vary by severity: Critical bugs (system down) - 4 hours, High priority bugs - 1-2 days, Medium priority bugs - 1 week, Low priority bugs - 2-4 weeks. You'll receive updates on progress and be notified when the bug is resolved.\",\n            category: \"Bug Ticket\",\n            tags: [\n                \"timeline\",\n                \"resolution\",\n                \"priority\"\n            ],\n            createdDate: \"2024-01-01T00:00:00Z\"\n        },\n        {\n            id: \"faq-5\",\n            title: \"How are feature requests prioritized?\",\n            content: \"Feature requests are prioritized based on: 1) Number of users who would benefit, 2) Business impact and ROI, 3) Technical complexity, 4) Alignment with product roadmap. Community voting and feedback also influence prioritization decisions.\",\n            category: \"Feature Request\",\n            tags: [\n                \"prioritization\",\n                \"process\",\n                \"roadmap\"\n            ],\n            createdDate: \"2024-01-01T00:00:00Z\"\n        }\n    ];\n};\n// STATS CALCULATIONS\nconst getTicketStats = ()=>{\n    const tickets = getTickets();\n    return {\n        total: tickets.length,\n        open: tickets.filter((t)=>t.status === \"Open\").length,\n        inProgress: tickets.filter((t)=>t.status === \"In Progress\").length,\n        closed: tickets.filter((t)=>t.status === \"Closed\").length,\n        highPriority: tickets.filter((t)=>t.priority === \"High\").length\n    };\n};\n// Example tickets for demonstration\nconst getDefaultTickets = ()=>{\n    return [\n        {\n            id: \"example-1\",\n            title: \"ChatGPT returns error when generating long responses\",\n            description: 'When requesting ChatGPT to generate responses longer than 2000 characters, it returns a \"Request timeout\" error. This happens consistently across different prompts.\\n\\nSteps to reproduce:\\n1. Open ChatGPT interface\\n2. Request a long response (e.g., \"Write a 3000-word essay about AI\")\\n3. Error appears after 30 seconds\\n\\nExpected: Long response should be generated successfully\\nActual: Timeout error is shown',\n            priority: \"High\",\n            category: \"Bug Ticket\",\n            status: \"Open\",\n            email: \"sarah.johnson@discoveryparks.com.au\",\n            createdDate: \"2024-12-13T10:30:00Z\"\n        },\n        {\n            id: \"example-2\",\n            title: \"Add dark mode toggle to AI tools interface\",\n            description: \"Many team members work in low-light environments and would benefit from a dark mode option for all AI tools. This would reduce eye strain and improve user experience.\\n\\nBenefits:\\nâ€¢ Reduced eye strain during long work sessions\\nâ€¢ Better battery life on laptops\\nâ€¢ Improved accessibility for users with light sensitivity\\nâ€¢ Modern, professional appearance\\n\\nSuggested implementation: Toggle switch in the top navigation bar that persists across sessions.\",\n            priority: \"Medium\",\n            category: \"Feature Request\",\n            status: \"In Progress\",\n            email: \"mike.chen@discoveryparks.com.au\",\n            createdDate: \"2024-12-12T14:15:00Z\"\n        },\n        {\n            id: \"example-3\",\n            title: \"GitHub Copilot suggestions not appearing in VS Code\",\n            description: 'GitHub Copilot is not showing any code suggestions in VS Code, even though the extension is installed and I have active access.\\n\\nTroubleshooting attempted:\\nâ€¢ Restarted VS Code\\nâ€¢ Disabled and re-enabled the extension\\nâ€¢ Checked internet connection\\nâ€¢ Verified account permissions\\n\\nThe status bar shows \"Copilot: Ready\" but no suggestions appear while typing.',\n            priority: \"High\",\n            category: \"Bug Ticket\",\n            status: \"Closed\",\n            email: \"alex.rodriguez@discoveryparks.com.au\",\n            createdDate: \"2024-12-11T09:45:00Z\"\n        },\n        {\n            id: \"example-4\",\n            title: \"Bulk export feature for AI tool usage reports\",\n            description: \"As a team manager, I need the ability to export usage reports for all AI tools in bulk for compliance and budgeting purposes.\\n\\nCurrent limitation: Reports must be exported individually for each tool\\nDesired feature: Single export button that generates a comprehensive report\\n\\nUse case: Monthly reporting to leadership about AI tool adoption and ROI\\nFormat preference: CSV or Excel with separate sheets for each tool\",\n            priority: \"Low\",\n            category: \"Feature Request\",\n            status: \"Open\",\n            email: \"jennifer.wong@discoveryparks.com.au\",\n            createdDate: \"2024-12-10T16:20:00Z\"\n        },\n        {\n            id: \"example-5\",\n            title: \"Midjourney images fail to load in shared workspace\",\n            description: 'When multiple users try to access Midjourney-generated images in our shared workspace, images fail to load with a \"403 Forbidden\" error.\\n\\nError details:\\nâ€¢ Occurs only in shared workspace, not personal workspaces\\nâ€¢ Affects all image formats (PNG, JPG, WEBP)\\nâ€¢ Browser console shows CORS policy error\\nâ€¢ Images load fine when accessed directly from Midjourney\\n\\nImpact: Team cannot collaborate on visual projects effectively',\n            priority: \"Medium\",\n            category: \"Bug Ticket\",\n            status: \"In Progress\",\n            email: \"david.taylor@discoveryparks.com.au\",\n            createdDate: \"2024-12-09T11:30:00Z\"\n        }\n    ];\n};\n// Initialize default knowledge articles and example tickets on first run\nconst initializeDefaultData = ()=>{\n    if (!safeLocalStorage.getItem(KNOWLEDGE_KEY)) {\n        const defaultArticles = getDefaultKnowledgeArticles();\n        safeLocalStorage.setItem(KNOWLEDGE_KEY, JSON.stringify(defaultArticles));\n    }\n    // Add example tickets if none exist\n    if (!safeLocalStorage.getItem(TICKETS_KEY)) {\n        const defaultTickets = getDefaultTickets();\n        safeLocalStorage.setItem(TICKETS_KEY, JSON.stringify(defaultTickets));\n    }\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./utils/localStorage.ts\n"));

/***/ })

});